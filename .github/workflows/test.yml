name: Polynomial Exercise Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Display Python version
      run: python --version
    
    - name: Run basic polynomial demo
      run: python polynomial.py
    
    - name: Run comprehensive test suite
      run: python test_polynomial.py
    
    - name: Run tests through main file
      run: python polynomial.py --test
    
    - name: Check for syntax errors
      run: |
        python -m py_compile polynomial.py
        python -m py_compile test_polynomial.py
        echo "‚úÖ All Python files compile successfully"

  exercise-progress:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Analyze exercise progress
      run: |
        echo "üìä EXERCISE PROGRESS ANALYSIS"
        echo "=============================="
        
        # Check if Sub class is implemented
        if python -c "
        from polynomial import Sub
        sub = Sub(1, 2)
        try:
            result = repr(sub)
            if result and result != 'None':
                print('‚úÖ Exercise 1a (Sub class): IMPLEMENTED')
            else:
                print('‚ùå Exercise 1a (Sub class): NOT IMPLEMENTED')
        except:
            print('‚ùå Exercise 1a (Sub class): NOT IMPLEMENTED')
        "; then
          echo "Sub class check completed"
        fi
        
        # Check if Div class is implemented
        if python -c "
        from polynomial import Div
        div = Div(1, 2)
        try:
            result = repr(div)
            if result and result != 'None':
                print('‚úÖ Exercise 1b (Div class): IMPLEMENTED')
            else:
                print('‚ùå Exercise 1b (Div class): NOT IMPLEMENTED')
        except:
            print('‚ùå Exercise 1b (Div class): NOT IMPLEMENTED')
        "; then
          echo "Div class check completed"
        fi
        
        # Check if evaluate methods are implemented
        if python -c "
        from polynomial import X, Int, Add, Mul
        try:
            x = X()
            result = x.evaluate(5)
            if result and hasattr(result, 'i'):
                print('‚úÖ Exercise 2a (X.evaluate): IMPLEMENTED')
            else:
                print('‚ùå Exercise 2a (X.evaluate): NOT IMPLEMENTED')
        except:
            print('‚ùå Exercise 2a (X.evaluate): NOT IMPLEMENTED')
        "; then
          echo "X.evaluate check completed"
        fi
        
        if python -c "
        from polynomial import Int
        try:
            i = Int(5)
            result = i.evaluate(0)
            if result and hasattr(result, 'i') and result.i == 5:
                print('‚úÖ Exercise 2b (Int.evaluate): IMPLEMENTED')
            else:
                print('‚ùå Exercise 2b (Int.evaluate): NOT IMPLEMENTED')
        except:
            print('‚ùå Exercise 2b (Int.evaluate): NOT IMPLEMENTED')
        "; then
          echo "Int.evaluate check completed"
        fi
        
        if python -c "
        from polynomial import Add, Int
        try:
            add = Add(Int(3), Int(5))
            result = add.evaluate(0)
            if result and hasattr(result, 'i') and result.i == 8:
                print('‚úÖ Exercise 2c (Add.evaluate): IMPLEMENTED')
            else:
                print('‚ùå Exercise 2c (Add.evaluate): NOT IMPLEMENTED')
        except:
            print('‚ùå Exercise 2c (Add.evaluate): NOT IMPLEMENTED')
        "; then
          echo "Add.evaluate check completed"
        fi
        
        if python -c "
        from polynomial import Mul, Int
        try:
            mul = Mul(Int(3), Int(5))
            result = mul.evaluate(0)
            if result and hasattr(result, 'i') and result.i == 15:
                print('‚úÖ Exercise 2d (Mul.evaluate): IMPLEMENTED')
            else:
                print('‚ùå Exercise 2d (Mul.evaluate): NOT IMPLEMENTED')
        except:
            print('‚ùå Exercise 2d (Mul.evaluate): NOT IMPLEMENTED')
        "; then
          echo "Mul.evaluate check completed"
        fi
        
        echo ""
        echo "üí° TIP: Run 'python test_polynomial.py' locally to see detailed test results!"
        echo "üìö Check the README.md for exercise instructions and hints."

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Run flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check --diff .
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
